{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Shahar\\\\Desktop\\\\Programing\\\\React\\\\Keeper-f\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shahar\\\\Desktop\\\\Programing\\\\React\\\\Keeper-f\\\\src\\\\components\\\\Weather\\\\Weather.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Weather.css\";\n\nfunction Weather(props) {\n  const _useState = useState({\n    temp_min: \"\",\n    temp_max: \"\",\n    description: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        weather = _useState2[0],\n        setWeather = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isUploaded = _useState4[0],\n        setIsUploaded = _useState4[1]; //Import the weather data using API\n\n\n  if (isUploaded) {\n    setIsUploaded(false);\n    axios.get(\"https://api.openweathermap.org/data/2.5/weather?q=Yafo&appid=46bacd4218d40f0729b3e0ffa1d82a55\").then(response => {\n      const new_temp_min = Math.round(response.data.main.temp_min - 273);\n      const new_temp_max = Math.round(response.data.main.temp_max - 273);\n      const newDescription = response.data.weather[0].main;\n      console.log(newDescription);\n      setWeather({\n        temp_min: new_temp_min,\n        temp_max: new_temp_max,\n        description: newDescription\n      });\n    });\n  } //Import the images\n\n\n  switch (weather.description) {\n    case \"Clear\":\n      var weatherImage = require(\"./weather-images/Clear.PNG\");\n\n      break;\n\n    case \"Clouds\":\n      var weatherImage = require(\"./weather-images/Cloud.PNG\");\n\n      break;\n\n    case \"Rain\":\n      var weatherImage = require(\"./weather-images/Rain.PNG\");\n\n      break;\n\n    case \"Snow\":\n      var weatherImage = require(\"./weather-images/Snow.PNG\");\n\n      break;\n  }\n\n  const temperature = [weather.temp_min, \" \", \"-\", \" \", weather.temp_max];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.mode ? \"weather-dark\" : \"weather-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, props.mode ? \" \" : /*#__PURE__*/React.createElement(\"img\", {\n    src: weatherImage,\n    alt: \"Not sure about it..\",\n    width: \"50\",\n    height: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, weather.description), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, temperature));\n}\n\nexport default Weather;","map":{"version":3,"sources":["C:/Users/Shahar/Desktop/Programing/React/Keeper-f/src/components/Weather/Weather.js"],"names":["React","useState","axios","Weather","props","temp_min","temp_max","description","weather","setWeather","isUploaded","setIsUploaded","get","then","response","new_temp_min","Math","round","data","main","new_temp_max","newDescription","console","log","weatherImage","require","temperature","mode"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA,oBACQH,QAAQ,CAAC;AACrCI,IAAAA,QAAQ,EAAE,EAD2B;AAErCC,IAAAA,QAAQ,EAAE,EAF2B;AAGrCC,IAAAA,WAAW,EAAE;AAHwB,GAAD,CADhB;AAAA;AAAA,QACfC,OADe;AAAA,QACNC,UADM;;AAAA,qBAMcR,QAAQ,CAAC,IAAD,CANtB;AAAA;AAAA,QAMfS,UANe;AAAA,QAMHC,aANG,kBAQtB;;;AACA,MAAID,UAAJ,EAAgB;AACdC,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAT,IAAAA,KAAK,CACFU,GADH,CAEI,+FAFJ,EAIGC,IAJH,CAISC,QAAD,IAAc;AAClB,YAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAACI,IAAT,CAAcC,IAAd,CAAmBd,QAAnB,GAA8B,GAAzC,CAArB;AACA,YAAMe,YAAY,GAAGJ,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAACI,IAAT,CAAcC,IAAd,CAAmBb,QAAnB,GAA8B,GAAzC,CAArB;AACA,YAAMe,cAAc,GAAGP,QAAQ,CAACI,IAAT,CAAcV,OAAd,CAAsB,CAAtB,EAAyBW,IAAhD;AAEAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AAEAZ,MAAAA,UAAU,CAAC;AACTJ,QAAAA,QAAQ,EAAEU,YADD;AAETT,QAAAA,QAAQ,EAAEc,YAFD;AAGTb,QAAAA,WAAW,EAAEc;AAHJ,OAAD,CAAV;AAKD,KAhBH;AAiBD,GA5BqB,CA6BtB;;;AACA,UAAQb,OAAO,CAACD,WAAhB;AACE,SAAK,OAAL;AACE,UAAIiB,YAAY,GAAGC,OAAO,CAAC,4BAAD,CAA1B;;AACA;;AACF,SAAK,QAAL;AACE,UAAID,YAAY,GAAGC,OAAO,CAAC,4BAAD,CAA1B;;AACA;;AACF,SAAK,MAAL;AACE,UAAID,YAAY,GAAGC,OAAO,CAAC,2BAAD,CAA1B;;AACA;;AACF,SAAK,MAAL;AACE,UAAID,YAAY,GAAGC,OAAO,CAAC,2BAAD,CAA1B;;AACA;AAZJ;;AAeA,QAAMC,WAAW,GAAG,CAAClB,OAAO,CAACH,QAAT,EAAmB,GAAnB,EAAwB,GAAxB,EAA6B,GAA7B,EAAkCG,OAAO,CAACF,QAA1C,CAApB;AACA,sBACE;AAAK,IAAA,SAAS,EAAEF,KAAK,CAACuB,IAAN,GAAa,cAAb,GAA8B,eAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,KAAK,CAACuB,IAAN,GACC,GADD,gBAGC;AACE,IAAA,GAAG,EAAEH,YADP;AAEE,IAAA,GAAG,EAAC,qBAFN;AAGE,IAAA,KAAK,EAAC,IAHR;AAIE,IAAA,MAAM,EAAC,IAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKhB,OAAO,CAACD,WAAb,CAZF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKmB,WAAL,CAbF,CADF;AAiBD;;AAED,eAAevB,OAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Weather.css\";\r\n\r\nfunction Weather(props) {\r\n  const [weather, setWeather] = useState({\r\n    temp_min: \"\",\r\n    temp_max: \"\",\r\n    description: \"\",\r\n  });\r\n  const [isUploaded, setIsUploaded] = useState(true);\r\n\r\n  //Import the weather data using API\r\n  if (isUploaded) {\r\n    setIsUploaded(false);\r\n    axios\r\n      .get(\r\n        \"https://api.openweathermap.org/data/2.5/weather?q=Yafo&appid=46bacd4218d40f0729b3e0ffa1d82a55\"\r\n      )\r\n      .then((response) => {\r\n        const new_temp_min = Math.round(response.data.main.temp_min - 273);\r\n        const new_temp_max = Math.round(response.data.main.temp_max - 273);\r\n        const newDescription = response.data.weather[0].main;\r\n\r\n        console.log(newDescription);\r\n\r\n        setWeather({\r\n          temp_min: new_temp_min,\r\n          temp_max: new_temp_max,\r\n          description: newDescription,\r\n        });\r\n      });\r\n  }\r\n  //Import the images\r\n  switch (weather.description) {\r\n    case \"Clear\":\r\n      var weatherImage = require(\"./weather-images/Clear.PNG\");\r\n      break;\r\n    case \"Clouds\":\r\n      var weatherImage = require(\"./weather-images/Cloud.PNG\");\r\n      break;\r\n    case \"Rain\":\r\n      var weatherImage = require(\"./weather-images/Rain.PNG\");\r\n      break;\r\n    case \"Snow\":\r\n      var weatherImage = require(\"./weather-images/Snow.PNG\");\r\n      break;\r\n  }\r\n\r\n  const temperature = [weather.temp_min, \" \", \"-\", \" \", weather.temp_max];\r\n  return (\r\n    <div className={props.mode ? \"weather-dark\" : \"weather-light\"}>\r\n      {props.mode ? (\r\n        \" \"\r\n      ) : (\r\n        <img\r\n          src={weatherImage}\r\n          alt=\"Not sure about it..\"\r\n          width=\"50\"\r\n          height=\"50\"\r\n        />\r\n      )}\r\n\r\n      <h1>{weather.description}</h1>\r\n      <h1>{temperature}</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n"]},"metadata":{},"sourceType":"module"}