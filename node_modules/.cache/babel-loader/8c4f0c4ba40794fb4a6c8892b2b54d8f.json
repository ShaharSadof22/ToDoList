{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Shahar\\\\Desktop\\\\Programing\\\\React\\\\Keeper-f\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shahar\\\\Desktop\\\\Programing\\\\React\\\\Keeper-f\\\\src\\\\components\\\\App\\\\App.jsx\";\nimport React, { useState } from \"react\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport Note from \"../Note/Note\";\nimport CreateArea from \"../CreateArea/CreateArea\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Weather from '../Weather/Weather';\nimport './App.css';\n\nfunction App() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        notes = _useState2[0],\n        setNotes = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        nightMode = _useState4[0],\n        setNightMode = _useState4[1];\n\n  function addNote(newNote) {\n    setNotes(prevNotes => {\n      return [...prevNotes, newNote];\n    });\n  }\n\n  function deleteNote(id) {\n    setNotes(prevNotes => {\n      return prevNotes.filter((noteItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: nightMode ? \"body-dark\" : \"body-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    mode: nightMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"mode-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, nightMode ? \"Dark Mode\" : \"Light Mode\"), /*#__PURE__*/React.createElement(Switch, {\n    onChange: () => setNightMode(prevValue => !prevValue),\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CreateArea, {\n    onAdd: addNote,\n    mode: nightMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Weather, {\n    mode: nightMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), notes.map((noteItem, index) => {\n    return /*#__PURE__*/React.createElement(Note, {\n      key: index,\n      id: index,\n      title: noteItem.title,\n      content: noteItem.content,\n      onDelete: deleteNote,\n      mode: nightMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    });\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Shahar/Desktop/Programing/React/Keeper-f/src/components/App/App.jsx"],"names":["React","useState","Header","Footer","Note","CreateArea","Switch","Weather","App","notes","setNotes","nightMode","setNightMode","addNote","newNote","prevNotes","deleteNote","id","filter","noteItem","index","prevValue","map","title","content"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACaP,QAAQ,CAAC,EAAD,CADrB;AAAA;AAAA,QACNQ,KADM;AAAA,QACCC,QADD;;AAAA,qBAGqBT,QAAQ,CAAC,KAAD,CAH7B;AAAA;AAAA,QAGNU,SAHM;AAAA,QAGKC,YAHL;;AAKb,WAASC,OAAT,CAAiBC,OAAjB,EAA0B;AACxBJ,IAAAA,QAAQ,CAAEK,SAAD,IAAe;AACtB,aAAO,CAAC,GAAGA,SAAJ,EAAeD,OAAf,CAAP;AACD,KAFO,CAAR;AAGD;;AAED,WAASE,UAAT,CAAoBC,EAApB,EAAwB;AACtBP,IAAAA,QAAQ,CAAEK,SAAD,IAAe;AACtB,aAAOA,SAAS,CAACG,MAAV,CAAiB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC3C,eAAOA,KAAK,KAAKH,EAAjB;AACD,OAFM,CAAP;AAGD,KAJO,CAAR;AAKD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAEN,SAAS,GAAG,WAAH,GAAiB,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEA,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BA,SAAS,GAAG,WAAH,GAAiB,YAArD,CAFF,eAGE,oBAAC,MAAD;AACE,IAAA,QAAQ,EAAE,MAAMC,YAAY,CAAES,SAAD,IAAe,CAACA,SAAjB,CAD9B;AAEE,IAAA,KAAK,EAAC,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAQE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAER,OAAnB;AAA4B,IAAA,IAAI,EAAEF,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUGF,KAAK,CAACa,GAAN,CAAU,CAACH,QAAD,EAAWC,KAAX,KAAqB;AAC9B,wBACE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,EAAE,EAAEA,KAFN;AAGE,MAAA,KAAK,EAAED,QAAQ,CAACI,KAHlB;AAIE,MAAA,OAAO,EAAEJ,QAAQ,CAACK,OAJpB;AAKE,MAAA,QAAQ,EAAER,UALZ;AAME,MAAA,IAAI,EAAEL,SANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD,GAXA,CAVH,eAsBE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,CADF;AA2BD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport Note from \"../Note/Note\";\nimport CreateArea from \"../CreateArea/CreateArea\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Weather from '../Weather/Weather';\nimport './App.css';\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n\n  const [nightMode, setNightMode] = useState(false);\n\n  function addNote(newNote) {\n    setNotes((prevNotes) => {\n      return [...prevNotes, newNote];\n    });\n  }\n\n  function deleteNote(id) {\n    setNotes((prevNotes) => {\n      return prevNotes.filter((noteItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div className={nightMode ? \"body-dark\" : \"body-light\"}>\n      <Header mode={nightMode} />\n      <h1 className=\"mode-name\">{nightMode ? \"Dark Mode\" : \"Light Mode\"}</h1>\n      <Switch\n        onChange={() => setNightMode((prevValue) => !prevValue)}\n        color=\"primary\"\n      />\n\n      <CreateArea onAdd={addNote} mode={nightMode} />\n      <Weather mode={nightMode}/>\n      {notes.map((noteItem, index) => {\n        return (\n          <Note\n            key={index}\n            id={index}\n            title={noteItem.title}\n            content={noteItem.content}\n            onDelete={deleteNote}\n            mode={nightMode}\n          />\n        );\n      })}\n      <Footer />\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}